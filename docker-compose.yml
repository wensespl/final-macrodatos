services:
  spark-master:
    image: wensespl/spark-master:1.0
    container_name: spark-master
    ports:
      - 8080:8080
    networks:
      - docker-net
    deploy:
      placement:
        # set node labels using docker node update --label-add key=value <NODE ID> from swarm manager
        constraints:
          - node.labels.role==master
  
  spark-worker-1:
    image: wensespl/spark-worker:1.0
    container_name: spark-worker-1
    ports:
      - 8081:8081
    environment:
      - CORES=3
      - MEMORY=15G
    deploy:
      placement:
        # set node labels using docker node update --label-add key=value <NODE ID> from swarm manager
        constraints:
          - node.labels.role==worker
    networks:
      - docker-net
  
  spark-worker-2:
    image: wensespl/spark-worker:1.0
    container_name: spark-worker-2
    ports:
      - 8082:8081
    environment:
      - CORES=3
      - MEMORY=15G
    deploy:
      placement:
        # set node labels using docker node update --label-add key=value <NODE ID> from swarm manager
        constraints:
          - node.labels.role==worker
    networks:
      - docker-net

  spark-client:
    image: wensespl/spark-submit:1.0
    container_name: spark-client
    networks:
      - docker-net
    ports:
      - 4040:4040
    volumes:
      - ./spark_apps:/spark/bin/spark_apps
    stdin_open: true
    tty: true
    command: bash
  
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - docker-net
  
  kafka-broker:
    image: wurstmeister/kafka
    container_name: kafka-broker
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "streaming_topic:1:1"
    networks:
      - docker-net

networks:
  docker-net:
    name: docker-net
    driver: bridge